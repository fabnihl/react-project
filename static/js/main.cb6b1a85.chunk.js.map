{"version":3,"sources":["theme.tsx","CancelButton.tsx","ConfirmButton.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ThemeColors","breakpoints","createMuiTheme","themeConfig","typography","fontFamily","fontSize","palette","type","primary","main","secondary","GREEN","error","RED","background","default","overrides","MuiButton","contained","borderRadius","MuiCssBaseline","width","height","backgroundColor","display","MuiTooltip","tooltip","LIGHT_BACKGROUND","border","boxShadow","color","MEDIUM_GREY_4","padding","MuiTypography","h1","MAIN_GREY","down","textAlign","h2","h3","fontWeight","WHITE","useStyles","makeStyles","root","LIGHT_GREY","paddingLeft","paddingRight","paddingTop","paddingBottom","textTransform","transform","CancelButton","props","classes","Button","className","disableElevation","ConfirmButton","theme","margin","flexGrow","maxWidth","paper","spacing","icon","SimplePopover","React","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","aria-describedby","variant","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Grid","container","item","xs","sm","justify","alignItems","Paper","Typography","style","MEDIUM_GREY_3","justify-content","direction","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cb6b1a85.chunk.js","sourcesContent":["import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\n\n\nexport enum ThemeColors {\n\tWHITE = '#fff',\n\tMAIN_GREY = '#4d4d4d',\n\tLIGHT_GREY = 'rgb(204,204,204)',\n\tDARK_GREY = '#808080',\n\n\tGREEN = '#77C698',\n\tGREEN_LIGHT = '#A8F9C9',\n\tGREEN_DARK= '#47956A',\n\tORANGE = '#FDB483',\n\tORANGE_LIGHT = '#FEE4B0',\n\tORANGE_DARK = '#C78456',\n\tPURPLE = '#9F92EF',\n\tPURPLE_LIGHT = '#D2C3FF',\n\tPURPLE_DARK = '#6E65BC',\n\tYELLOW = '#FFE392',\n\tYELLOW_LIGHT = '#FFFFC3',\n\tYELLOW_DARK = '#C9B063',\n\tRED = '#FF6464',\n\tRED_LIGHT = '#FF9792',\n\tRED_DARK = '#C42F3A',\n\tBLUE = '#5984C2',\n\tBLUE_LIGHT = '#8CB4F5',\n\tBLUE_DARK = '#225890',\n\n\tDARK_BACKGROUND = '#121212',\n\tLIGHT_BACKGROUND = '#FCFCFC',\n\tLIGHT_GREY_1 = '#F5F5F5',\n\tLIGHT_GREY_2 = '#EFEFEF',\n\tLIGHT_GREY_3 = '#E6E6E6',\n\tMEDIUM_GREY_1 = '#CCCCCC',\n\tMEDIUM_GREY_2  = '#999999',\n\tMEDIUM_GREY_3  = '#808080',\n\tMEDIUM_GREY_4  = '#4D4D4D',\n\tDARK_GREY_1 = '#424242',\n\tDARK_GREY_2  = '#393939',\n\tDARK_GREY_3 = '#2B2B2B'\n}\n\n/** Base theme to inherit properties */\nconst defaultTheme = createMuiTheme()\nconst { breakpoints } = defaultTheme\n/**\n * Material UI Theme configuration for TOP\n */\nexport const themeConfig: Partial<ThemeOptions> = {\n\ttypography: {\n\t\tfontFamily: 'Roboto, Arial',\n\t\tfontSize: 11,\n\t},\n\tpalette: {\n\t\ttype: 'light', //or dark\n\t\tprimary: {\n\t\t\tmain: '#556cd6', \n\t\t},\n\t\tsecondary: {\n\t\t\tmain: ThemeColors.GREEN,\n\t\t},\n\t\terror: {\n\t\t\tmain: ThemeColors.RED,\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: \"#FCFCFC\"\n\t\t\t\n\t\t},\n\t},\n\toverrides: {\n\t\tMuiButton: {\n\t\t\tcontained: {\n\t\t\t\tborderRadius: '20px',\n\t\t\t},\n\t\t},\n\t\tMuiCssBaseline: {\n\t\t\t'@global': {\n\t\t\t\t'*::-webkit-scrollbar': {\n\t\t\t\t\twidth: '8px',\n\t\t\t\t\theight: '8px',\n\t\t\t\t},\n\t\t\t\t'*::-webkit-scrollbar-thumb': {\n\t\t\t\t\tbackgroundColor: '#babac0',\n\t\t\t\t\tborderRadius: '6px',\n\t\t\t\t},\n\t\t\t\t'*::-webkit-scrollbar-thumb:hover': {\n\t\t\t\t\tbackgroundColor: '#a0a0a5',\n\t\t\t\t},\n\t\t\t\t'*::-webkit-scrollbar-button': {\n\t\t\t\t\tdisplay: 'none',\n\t\t\t\t}\n\t\t\t},\n\t\t},\n     \n\t\tMuiTooltip: {\n\t\t\ttooltip: {\n\t\t\t\tfontSize: '11px',\n\t\t\t\tbackgroundColor: ThemeColors.LIGHT_BACKGROUND,\n\t\t\t\tborder: '8px',\n\t\t\t\tboxShadow: '2px 4px 5px 5px rgba(0, 0, 0, 0.16)',\n\t\t\t\tcolor: ThemeColors.MEDIUM_GREY_4,\n\t\t\t\tpadding: '7px',\n\t\t\t},\n\t\t},\n\t\tMuiTypography: {\n\t\t\th1: {\n\t\t\t\tfontSize: '50px',\n\t\t\t\tcolor: ThemeColors.MAIN_GREY,\n\t\t\t\t[breakpoints.down(\"xl\")]: {\n\t\t\t\t\tfontSize: '60px',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"lg\")]: {\n\t\t\t\t\tfontSize: '55px',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"md\")]: {\n\t\t\t\t\tfontSize: '40px',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"sm\")]: {\n\t\t\t\t\tfontSize: '30px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"xs\")]: {\n\t\t\t\t\tfontSize: '24px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\t\n\t\t\t},\n\t\t\th2: {\n\t\t\t\tfontSize: '25px',\t\n\t\t\t\tcolor: ThemeColors.MAIN_GREY,\n\t\t\t\t[breakpoints.down(\"xl\")]: {\n\t\t\t\t\tfontSize: '30px',\n\t\t\t\t},\n\t\t\t\t[breakpoints.down(\"lg\")]: {\n\t\t\t\t\tfontSize: '24px',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"md\")]: {\n\t\t\t\t\tfontSize: '22px',\n\t\t\t\t},\n\t\t\t\t[breakpoints.down(\"sm\")]: {\n\t\t\t\t\tfontSize: '18px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\n\t\t\t\t[breakpoints.down(\"xs\")]: {\n\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\n\t\t\t},\n\t\t\th3: {\n\t\t\t\tfontSize: '16px',\n\t\t\t\tcolor: ThemeColors.MAIN_GREY,\n\t\t\t\t[breakpoints.down(\"xl\")]: {\n\t\t\t\t\tfontSize: '20px',\n\t\t\t\t},\t\t\t\n\t\t\t\t[breakpoints.down(\"lg\")]: {\n\t\t\t\t\tfontSize: '18px',\n\t\t\t\t},\t\n\t\t\t\t[breakpoints.down(\"md\")]: {\n\t\t\t\t\tfontSize: '16px',\n\t\t\t\t},\n\t\t\t\t[breakpoints.down(\"sm\")]: {\n\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\t\t\t\n\t\t\t\t[breakpoints.down(\"xs\")]: {\n\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t},\n\t\t\t\th4: {\n\t\t\t\t\tfontSize: '11px',\n\t\t\t\t\tfontWeight: '700',\n\t\t\t\t\tcolor: ThemeColors.WHITE,\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t},\n\t\t\t},\n\t\t}\n\t},\n}\n\n\n\n/** Used for storybook */\nexport default createMuiTheme(themeConfig)\n","import React from 'react';\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { ThemeColors } from './theme';\n\n\n\nconst useStyles = makeStyles(() => ({\n\n    root: {\n            backgroundColor: ThemeColors.LIGHT_GREY,\n            color: \"white\",\n            borderRadius: 100,\n            paddingLeft: 20,\n            paddingRight: 20,\n            paddingTop: 0.5,\n            paddingBottom: 0.5,\n            textTransform: 'capitalize',\n            fontWeight: 700,\n            fontSize: 11,\n            '&:hover':{\n            transform: \"scale(1.05)\",\n            backgroundColor: ThemeColors.RED\n                \n            }\n        },\n}))\n\ninterface Props {\n    \n}   \n\nexport function CancelButton(props:Props) {\n    const classes = useStyles();\n\n    return (\n        <Button \n            className={classes.root}\n            disableElevation\n            {...props}\n        >\n            Cancel\n        \n        </Button>\n    )\n}\n\nexport default CancelButton;","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { ThemeColors } from './theme';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(() => ({\n\n root: {\n            backgroundColor: ThemeColors.GREEN,\n            color: \"white\",\n            borderRadius: 100,\n            padding: 20,\n            height: 20,\n            textTransform: 'capitalize',\n            fontWeight: 700,\n            '&:hover':{\n            transform: \"scale(1.05)\",\n            backgroundColor: ThemeColors.GREEN\n            }\n        },\n}))\n\ninterface Props {\n    \n}   \n\n\nexport function ConfirmButton(props:Props) {\n    const classes = useStyles();\n\n    return (\n        <Button \n            className={classes.root}\n            disableElevation\n            {...props}\n        >        \n        </Button>\n    )\n}\n\nexport default ConfirmButton;","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { ThemeColors } from './theme';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CancelButton from './CancelButton';\nimport ConfirmButton from './ConfirmButton';\nimport ReportProblemRoundedIcon from '@material-ui/icons/ReportProblemRounded';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    flexGrow: 1, \n    maxWidth: 300,\n    \"& .MuiPaper-root\": {\n      boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0.0);\",\n    },\n    \"& .MuiPaper-rounded\": {\n      borderRadius: \"20px\",\n    },\n  },\n  \n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  typography: {\n    margin: 0,\n    textAlign: 'center',\n  },\n  icon: {\n    padding: theme.spacing(2, 1, 0, 1),\n    textAlign: 'center',\n  }\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n        Delete\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      > <div className={classes.root}>\n      <Grid container spacing={0}>\n      <Grid item xs={12} sm={12}  container   \n      justify=\"center\"\n      alignItems=\"center\">\n      <Paper className={classes.icon}>\n      <Typography  >\n        <ReportProblemRoundedIcon style={{ color: ThemeColors.MEDIUM_GREY_3, fontSize: '50' }} />\n      </Typography>\n      </Paper>\n      </Grid>\n        <Grid item xs={12} sm={12} \n          justify-content=\"center\"\n          alignItems=\"center\">\n          <Paper className={classes.typography}>\n          <Typography>Are you sure you want to delete?</Typography>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={6} sm={6}  \n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\">\n          <Paper className={classes.paper}>\n          <Typography onClick={handleClose}>\n          <ConfirmButton>Confirm</ConfirmButton>\n          </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={6}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\">\n          <Paper className={classes.paper}>\n          <Typography onClick={handleClose}>\n          <CancelButton>Cancel</CancelButton>\n          </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n      </Popover>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}